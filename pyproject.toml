[build-system]
requires = ["setuptools>=61", "build", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "requilt"
authors = [{ name = "requilt developers", email = "etaoxing@users.noreply.github.com" }]
description = "An optimization and neural network library for Warp"
license = "Apache-2.0"
classifiers = [
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
dynamic = ["version", "readme"]
requires-python = ">=3.12"
dependencies = [
    "warp-lang",
]

[project.optional-dependencies]
dev = ["ruff"]

[tool.setuptools.packages.find]
include = ["requilt*"]

[tool.setuptools.dynamic]
version = { file = ["VERSION"] }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
indent-width = 4
extend-exclude = []

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "I",   # isort
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "NPY", # NumPy-specific rules
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLW", # pylint warning
    "UP",  # pyupgrade
    "RUF",
]
ignore = [
    "E501",    # Many lines are over 120 characters already
    "E741",    # Warp often uses l as a variable name
    "F403",    # Allow wildcard imports
    "F405",    # Related to use of wildcard imports
    "F811",    # Warp often uses overloads
    "E721",    # Warp often uses == in float and int type comparisons
    "PLW0603", # Allow assignments to global variables
    "UP018",   # Warp kernels often use float(val) and int(val)
    "RUF046",  # Warp kernels often use int(val)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"requilt/tests/*.py" = ["F841"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["warp"]
